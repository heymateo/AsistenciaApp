//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace AsistenciaApp
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        private global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace AsistenciaApp.AsistenciaApp_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[110];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "WinUIEx.WindowEx";
            _typeNameTable[5] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[6] = "Double";
            _typeNameTable[7] = "String";
            _typeNameTable[8] = "Microsoft.UI.Windowing.AppWindow";
            _typeNameTable[9] = "WinUIEx.Icon";
            _typeNameTable[10] = "WinUIEx.WindowState";
            _typeNameTable[11] = "System.Enum";
            _typeNameTable[12] = "System.ValueType";
            _typeNameTable[13] = "Microsoft.UI.Windowing.AppWindowPresenter";
            _typeNameTable[14] = "Microsoft.UI.Windowing.AppWindowPresenterKind";
            _typeNameTable[15] = "WinUIEx.SystemBackdrop";
            _typeNameTable[16] = "Microsoft.UI.Xaml.Media.MicaBackdrop";
            _typeNameTable[17] = "Microsoft.UI.Xaml.Media.SystemBackdrop";
            _typeNameTable[18] = "Microsoft.UI.Composition.SystemBackdrops.MicaKind";
            _typeNameTable[19] = "AsistenciaApp.MainWindow";
            _typeNameTable[20] = "Microsoft.UI.Xaml.Thickness";
            _typeNameTable[21] = "Microsoft.UI.Xaml.CornerRadius";
            _typeNameTable[22] = "AsistenciaApp.Converters.DateToStringConverter";
            _typeNameTable[23] = "AsistenciaApp.Views.AsistenciaPage";
            _typeNameTable[24] = "Microsoft.UI.Xaml.Controls.Page";
            _typeNameTable[25] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[26] = "AsistenciaApp.ViewModels.AsistenciaViewModel";
            _typeNameTable[27] = "CommunityToolkit.Mvvm.ComponentModel.ObservableObject";
            _typeNameTable[28] = "AsistenciaApp.Views.ContentGridDetailPage";
            _typeNameTable[29] = "AsistenciaApp.ViewModels.ContentGridDetailViewModel";
            _typeNameTable[30] = "CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient";
            _typeNameTable[31] = "CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView";
            _typeNameTable[32] = "Microsoft.UI.Xaml.Controls.GridView";
            _typeNameTable[33] = "Microsoft.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[34] = "System.Windows.Input.ICommand";
            _typeNameTable[35] = "Microsoft.UI.Xaml.Controls.ItemsPanelTemplate";
            _typeNameTable[36] = "CommunityToolkit.WinUI.UI.Animations.Connected";
            _typeNameTable[37] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[38] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[39] = "AsistenciaApp.Views.ContentGridPage";
            _typeNameTable[40] = "AsistenciaApp.ViewModels.ContentGridViewModel";
            _typeNameTable[41] = "CommunityToolkit.WinUI.UI.Controls.DataGrid";
            _typeNameTable[42] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[43] = "CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility";
            _typeNameTable[44] = "System.Collections.IEnumerable";
            _typeNameTable[45] = "System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>";
            _typeNameTable[46] = "System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>";
            _typeNameTable[47] = "CommunityToolkit.WinUI.UI.Controls.DataGridColumn";
            _typeNameTable[48] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[49] = "Microsoft.UI.Xaml.Data.Binding";
            _typeNameTable[50] = "Int32";
            _typeNameTable[51] = "System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>";
            _typeNameTable[52] = "CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection";
            _typeNameTable[53] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[54] = "CommunityToolkit.WinUI.UI.Controls.DataGridLength";
            _typeNameTable[55] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[56] = "CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode";
            _typeNameTable[57] = "CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility";
            _typeNameTable[58] = "Microsoft.UI.Xaml.Controls.ScrollBarVisibility";
            _typeNameTable[59] = "Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger";
            _typeNameTable[60] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[61] = "CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode";
            _typeNameTable[62] = "CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode";
            _typeNameTable[63] = "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>";
            _typeNameTable[64] = "System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>";
            _typeNameTable[65] = "System.Collections.IList";
            _typeNameTable[66] = "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn";
            _typeNameTable[67] = "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn";
            _typeNameTable[68] = "Microsoft.UI.Xaml.Media.FontFamily";
            _typeNameTable[69] = "Windows.UI.Text.FontStyle";
            _typeNameTable[70] = "Windows.UI.Text.FontWeight";
            _typeNameTable[71] = "CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn";
            _typeNameTable[72] = "AsistenciaApp.Views.DataGridPage";
            _typeNameTable[73] = "AsistenciaApp.ViewModels.DataGridViewModel";
            _typeNameTable[74] = "AsistenciaApp.Views.EstudiantesDataGrid";
            _typeNameTable[75] = "AsistenciaApp.ViewModels.EstudiantesDataGridViewModel";
            _typeNameTable[76] = "AsistenciaApp.Views.ListDetailsDetailControl";
            _typeNameTable[77] = "AsistenciaApp.Core.Models.SampleOrder";
            _typeNameTable[78] = "CommunityToolkit.WinUI.UI.Controls.ListDetailsView";
            _typeNameTable[79] = "CommunityToolkit.WinUI.UI.Controls.BackButtonBehavior";
            _typeNameTable[80] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[81] = "CommunityToolkit.WinUI.UI.Controls.ListDetailsViewState";
            _typeNameTable[82] = "Microsoft.UI.Xaml.Controls.CommandBar";
            _typeNameTable[83] = "System.Func`2<Object, Object>";
            _typeNameTable[84] = "System.MulticastDelegate";
            _typeNameTable[85] = "System.Delegate";
            _typeNameTable[86] = "AsistenciaApp.Views.ListDetailsPage";
            _typeNameTable[87] = "AsistenciaApp.ViewModels.ListDetailsViewModel";
            _typeNameTable[88] = "AsistenciaApp.Views.LoginPage";
            _typeNameTable[89] = "AsistenciaApp.Views.MainPage";
            _typeNameTable[90] = "AsistenciaApp.ViewModels.MainViewModel";
            _typeNameTable[91] = "AsistenciaApp.Views.RestorePasswordPage";
            _typeNameTable[92] = "AsistenciaApp.Helpers.EnumToBooleanConverter";
            _typeNameTable[93] = "AsistenciaApp.Views.SettingsPage";
            _typeNameTable[94] = "AsistenciaApp.ViewModels.SettingsViewModel";
            _typeNameTable[95] = "Microsoft.UI.Xaml.Controls.MenuBar";
            _typeNameTable[96] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuBarItem>";
            _typeNameTable[97] = "Microsoft.UI.Xaml.Controls.MenuBarItem";
            _typeNameTable[98] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase>";
            _typeNameTable[99] = "Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase";
            _typeNameTable[100] = "Microsoft.UI.Xaml.Controls.AnimatedIcon";
            _typeNameTable[101] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[102] = "Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2";
            _typeNameTable[103] = "Microsoft.UI.Xaml.Controls.IconSource";
            _typeNameTable[104] = "Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedSettingsVisualSource";
            _typeNameTable[105] = "System.Collections.Generic.IReadOnlyDictionary`2<String, Double>";
            _typeNameTable[106] = "AsistenciaApp.Views.ShellPage";
            _typeNameTable[107] = "AsistenciaApp.ViewModels.ShellViewModel";
            _typeNameTable[108] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[109] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";

            _typeTable = new global::System.Type[110];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::WinUIEx.WindowEx);
            _typeTable[5] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[6] = typeof(global::System.Double);
            _typeTable[7] = typeof(global::System.String);
            _typeTable[8] = typeof(global::Microsoft.UI.Windowing.AppWindow);
            _typeTable[9] = typeof(global::WinUIEx.Icon);
            _typeTable[10] = typeof(global::WinUIEx.WindowState);
            _typeTable[11] = typeof(global::System.Enum);
            _typeTable[12] = typeof(global::System.ValueType);
            _typeTable[13] = typeof(global::Microsoft.UI.Windowing.AppWindowPresenter);
            _typeTable[14] = typeof(global::Microsoft.UI.Windowing.AppWindowPresenterKind);
#pragma warning disable 0618  //   Warning on Deprecated usage
            _typeTable[15] = typeof(global::WinUIEx.SystemBackdrop);
#pragma warning restore 0618
            _typeTable[16] = typeof(global::Microsoft.UI.Xaml.Media.MicaBackdrop);
            _typeTable[17] = typeof(global::Microsoft.UI.Xaml.Media.SystemBackdrop);
            _typeTable[18] = typeof(global::Microsoft.UI.Composition.SystemBackdrops.MicaKind);
            _typeTable[19] = typeof(global::AsistenciaApp.MainWindow);
            _typeTable[20] = typeof(global::Microsoft.UI.Xaml.Thickness);
            _typeTable[21] = typeof(global::Microsoft.UI.Xaml.CornerRadius);
            _typeTable[22] = typeof(global::AsistenciaApp.Converters.DateToStringConverter);
            _typeTable[23] = typeof(global::AsistenciaApp.Views.AsistenciaPage);
            _typeTable[24] = typeof(global::Microsoft.UI.Xaml.Controls.Page);
            _typeTable[25] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[26] = typeof(global::AsistenciaApp.ViewModels.AsistenciaViewModel);
            _typeTable[27] = typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableObject);
            _typeTable[28] = typeof(global::AsistenciaApp.Views.ContentGridDetailPage);
            _typeTable[29] = typeof(global::AsistenciaApp.ViewModels.ContentGridDetailViewModel);
            _typeTable[30] = typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient);
            _typeTable[31] = typeof(global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView);
            _typeTable[32] = typeof(global::Microsoft.UI.Xaml.Controls.GridView);
            _typeTable[33] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsControl);
            _typeTable[34] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[35] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsPanelTemplate);
            _typeTable[36] = typeof(global::CommunityToolkit.WinUI.UI.Animations.Connected);
            _typeTable[37] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[38] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[39] = typeof(global::AsistenciaApp.Views.ContentGridPage);
            _typeTable[40] = typeof(global::AsistenciaApp.ViewModels.ContentGridViewModel);
            _typeTable[41] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGrid);
            _typeTable[42] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[43] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility);
            _typeTable[44] = typeof(global::System.Collections.IEnumerable);
            _typeTable[45] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>);
            _typeTable[46] = typeof(global::System.Collections.ObjectModel.Collection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>);
            _typeTable[47] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn);
            _typeTable[48] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[49] = typeof(global::Microsoft.UI.Xaml.Data.Binding);
            _typeTable[50] = typeof(global::System.Int32);
            _typeTable[51] = typeof(global::System.Nullable<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>);
            _typeTable[52] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection);
            _typeTable[53] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[54] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridLength);
            _typeTable[55] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[56] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode);
            _typeTable[57] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility);
            _typeTable[58] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility);
            _typeTable[59] = typeof(global::Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger);
            _typeTable[60] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[61] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode);
            _typeTable[62] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode);
            _typeTable[63] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.UI.Xaml.Style>);
            _typeTable[64] = typeof(global::System.Collections.ObjectModel.Collection<global::Microsoft.UI.Xaml.Style>);
            _typeTable[65] = typeof(global::System.Collections.IList);
            _typeTable[66] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn);
            _typeTable[67] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn);
            _typeTable[68] = typeof(global::Microsoft.UI.Xaml.Media.FontFamily);
            _typeTable[69] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[70] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[71] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn);
            _typeTable[72] = typeof(global::AsistenciaApp.Views.DataGridPage);
            _typeTable[73] = typeof(global::AsistenciaApp.ViewModels.DataGridViewModel);
            _typeTable[74] = typeof(global::AsistenciaApp.Views.EstudiantesDataGrid);
            _typeTable[75] = typeof(global::AsistenciaApp.ViewModels.EstudiantesDataGridViewModel);
            _typeTable[76] = typeof(global::AsistenciaApp.Views.ListDetailsDetailControl);
            _typeTable[77] = typeof(global::AsistenciaApp.Core.Models.SampleOrder);
            _typeTable[78] = typeof(global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView);
            _typeTable[79] = typeof(global::CommunityToolkit.WinUI.UI.Controls.BackButtonBehavior);
            _typeTable[80] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[81] = typeof(global::CommunityToolkit.WinUI.UI.Controls.ListDetailsViewState);
            _typeTable[82] = typeof(global::Microsoft.UI.Xaml.Controls.CommandBar);
            _typeTable[83] = typeof(global::System.Func<global::System.Object, global::System.Object>);
            _typeTable[84] = typeof(global::System.MulticastDelegate);
            _typeTable[85] = typeof(global::System.Delegate);
            _typeTable[86] = typeof(global::AsistenciaApp.Views.ListDetailsPage);
            _typeTable[87] = typeof(global::AsistenciaApp.ViewModels.ListDetailsViewModel);
            _typeTable[88] = typeof(global::AsistenciaApp.Views.LoginPage);
            _typeTable[89] = typeof(global::AsistenciaApp.Views.MainPage);
            _typeTable[90] = typeof(global::AsistenciaApp.ViewModels.MainViewModel);
            _typeTable[91] = typeof(global::AsistenciaApp.Views.RestorePasswordPage);
            _typeTable[92] = typeof(global::AsistenciaApp.Helpers.EnumToBooleanConverter);
            _typeTable[93] = typeof(global::AsistenciaApp.Views.SettingsPage);
            _typeTable[94] = typeof(global::AsistenciaApp.ViewModels.SettingsViewModel);
            _typeTable[95] = typeof(global::Microsoft.UI.Xaml.Controls.MenuBar);
            _typeTable[96] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MenuBarItem>);
            _typeTable[97] = typeof(global::Microsoft.UI.Xaml.Controls.MenuBarItem);
            _typeTable[98] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase>);
            _typeTable[99] = typeof(global::Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase);
            _typeTable[100] = typeof(global::Microsoft.UI.Xaml.Controls.AnimatedIcon);
            _typeTable[101] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[102] = typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2);
            _typeTable[103] = typeof(global::Microsoft.UI.Xaml.Controls.IconSource);
            _typeTable[104] = typeof(global::Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedSettingsVisualSource);
            _typeTable[105] = typeof(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Double>);
            _typeTable[106] = typeof(global::AsistenciaApp.Views.ShellPage);
            _typeTable[107] = typeof(global::AsistenciaApp.ViewModels.ShellViewModel);
            _typeTable[108] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[109] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_4_WindowEx() { return new global::WinUIEx.WindowEx(); }
        private object Activate_16_MicaBackdrop() { return new global::Microsoft.UI.Xaml.Media.MicaBackdrop(); }
        private object Activate_19_MainWindow() { return new global::AsistenciaApp.MainWindow(); }
        private object Activate_22_DateToStringConverter() { return new global::AsistenciaApp.Converters.DateToStringConverter(); }
        private object Activate_23_AsistenciaPage() { return new global::AsistenciaApp.Views.AsistenciaPage(); }
        private object Activate_26_AsistenciaViewModel() { return new global::AsistenciaApp.ViewModels.AsistenciaViewModel(); }
        private object Activate_28_ContentGridDetailPage() { return new global::AsistenciaApp.Views.ContentGridDetailPage(); }
        private object Activate_31_AdaptiveGridView() { return new global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView(); }
        private object Activate_39_ContentGridPage() { return new global::AsistenciaApp.Views.ContentGridPage(); }
        private object Activate_41_DataGrid() { return new global::CommunityToolkit.WinUI.UI.Controls.DataGrid(); }
        private object Activate_45_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>(); }
        private object Activate_46_Collection() { return new global::System.Collections.ObjectModel.Collection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>(); }
        private object Activate_63_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.UI.Xaml.Style>(); }
        private object Activate_64_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Microsoft.UI.Xaml.Style>(); }
        private object Activate_66_DataGridTextColumn() { return new global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn(); }
        private object Activate_71_DataGridTemplateColumn() { return new global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn(); }
        private object Activate_72_DataGridPage() { return new global::AsistenciaApp.Views.DataGridPage(); }
        private object Activate_74_EstudiantesDataGrid() { return new global::AsistenciaApp.Views.EstudiantesDataGrid(); }
        private object Activate_76_ListDetailsDetailControl() { return new global::AsistenciaApp.Views.ListDetailsDetailControl(); }
        private object Activate_77_SampleOrder() { return new global::AsistenciaApp.Core.Models.SampleOrder(); }
        private object Activate_78_ListDetailsView() { return new global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView(); }
        private object Activate_86_ListDetailsPage() { return new global::AsistenciaApp.Views.ListDetailsPage(); }
        private object Activate_88_LoginPage() { return new global::AsistenciaApp.Views.LoginPage(); }
        private object Activate_89_MainPage() { return new global::AsistenciaApp.Views.MainPage(); }
        private object Activate_90_MainViewModel() { return new global::AsistenciaApp.ViewModels.MainViewModel(); }
        private object Activate_91_RestorePasswordPage() { return new global::AsistenciaApp.Views.RestorePasswordPage(); }
        private object Activate_92_EnumToBooleanConverter() { return new global::AsistenciaApp.Helpers.EnumToBooleanConverter(); }
        private object Activate_93_SettingsPage() { return new global::AsistenciaApp.Views.SettingsPage(); }
        private object Activate_95_MenuBar() { return new global::Microsoft.UI.Xaml.Controls.MenuBar(); }
        private object Activate_97_MenuBarItem() { return new global::Microsoft.UI.Xaml.Controls.MenuBarItem(); }
        private object Activate_100_AnimatedIcon() { return new global::Microsoft.UI.Xaml.Controls.AnimatedIcon(); }
        private object Activate_104_AnimatedSettingsVisualSource() { return new global::Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedSettingsVisualSource(); }
        private object Activate_106_ShellPage() { return new global::AsistenciaApp.Views.ShellPage(); }
        private object Activate_108_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_45_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>)instance;
            var newItem = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_46_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>)instance;
            var newItem = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_63_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Style>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Style)item;
            collection.Add(newItem);
        }
        private void VectorAdd_64_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Style>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Style)item;
            collection.Add(newItem);
        }
        private void VectorAdd_96_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.MenuBarItem>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.MenuBarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_98_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_109_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  WinUIEx.WindowEx
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_4_WindowEx;
                userType.SetContentPropertyName("WinUIEx.WindowEx.WindowContent");
                userType.AddMemberName("WindowContent");
                userType.AddMemberName("MinWidth");
                userType.AddMemberName("MinHeight");
                userType.AddMemberName("PersistenceId");
                userType.AddMemberName("AppWindow");
                userType.AddMemberName("TaskBarIcon");
                userType.AddMemberName("Title");
                userType.AddMemberName("IsTitleBarVisible");
                userType.AddMemberName("IsMinimizable");
                userType.AddMemberName("IsMaximizable");
                userType.AddMemberName("IsResizable");
                userType.AddMemberName("WindowState");
                userType.AddMemberName("IsShownInSwitchers");
                userType.AddMemberName("IsAlwaysOnTop");
                userType.AddMemberName("Presenter");
                userType.AddMemberName("PresenterKind");
                userType.AddMemberName("Width");
                userType.AddMemberName("Height");
                userType.AddMemberName("MaxWidth");
                userType.AddMemberName("MaxHeight");
                userType.AddMemberName("Backdrop");
                xamlType = userType;
                break;

            case 5:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Double
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  String
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Microsoft.UI.Windowing.AppWindow
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 9:   //  WinUIEx.Icon
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CreateFromStringMethod = global::WinUIEx.Icon.FromFile;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  WinUIEx.WindowState
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::WinUIEx.WindowState.Normal);
                userType.AddEnumValue("Minimized", global::WinUIEx.WindowState.Minimized);
                userType.AddEnumValue("Maximized", global::WinUIEx.WindowState.Maximized);
                xamlType = userType;
                break;

            case 11:   //  System.Enum
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 12:   //  System.ValueType
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 13:   //  Microsoft.UI.Windowing.AppWindowPresenter
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  Microsoft.UI.Windowing.AppWindowPresenterKind
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Microsoft.UI.Windowing.AppWindowPresenterKind.Default);
                userType.AddEnumValue("CompactOverlay", global::Microsoft.UI.Windowing.AppWindowPresenterKind.CompactOverlay);
                userType.AddEnumValue("FullScreen", global::Microsoft.UI.Windowing.AppWindowPresenterKind.FullScreen);
                userType.AddEnumValue("Overlapped", global::Microsoft.UI.Windowing.AppWindowPresenterKind.Overlapped);
                xamlType = userType;
                break;

            case 15:   //  WinUIEx.SystemBackdrop
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 16:   //  Microsoft.UI.Xaml.Media.MicaBackdrop
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Media.SystemBackdrop"));
                userType.Activator = Activate_16_MicaBackdrop;
                userType.AddMemberName("Kind");
                xamlType = userType;
                break;

            case 17:   //  Microsoft.UI.Xaml.Media.SystemBackdrop
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Microsoft.UI.Composition.SystemBackdrops.MicaKind
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Base", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.Base);
                userType.AddEnumValue("BaseAlt", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.BaseAlt);
                xamlType = userType;
                break;

            case 19:   //  AsistenciaApp.MainWindow
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinUIEx.WindowEx"));
                userType.Activator = Activate_19_MainWindow;
                userType.SetContentPropertyName("WinUIEx.WindowEx.WindowContent");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  Microsoft.UI.Xaml.Thickness
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("Left");
                userType.AddMemberName("Top");
                userType.AddMemberName("Right");
                userType.AddMemberName("Bottom");
                xamlType = userType;
                break;

            case 21:   //  Microsoft.UI.Xaml.CornerRadius
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("TopLeft");
                userType.AddMemberName("TopRight");
                userType.AddMemberName("BottomRight");
                userType.AddMemberName("BottomLeft");
                xamlType = userType;
                break;

            case 22:   //  AsistenciaApp.Converters.DateToStringConverter
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_22_DateToStringConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  AsistenciaApp.Views.AsistenciaPage
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_23_AsistenciaPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  Microsoft.UI.Xaml.Controls.Page
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  AsistenciaApp.ViewModels.AsistenciaViewModel
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  CommunityToolkit.Mvvm.ComponentModel.ObservableObject
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 28:   //  AsistenciaApp.Views.ContentGridDetailPage
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_28_ContentGridDetailPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  AsistenciaApp.ViewModels.ContentGridDetailViewModel
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                xamlType = userType;
                break;

            case 31:   //  CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.GridView"));
                userType.Activator = Activate_31_AdaptiveGridView;
                userType.AddMemberName("DesiredWidth");
                userType.AddMemberName("ItemHeight");
                userType.AddMemberName("ItemClickCommand");
                userType.AddMemberName("StretchContentForSingleRow");
                userType.AddMemberName("OneRowModeEnabled");
                userType.AddMemberName("ItemsPanel");
                xamlType = userType;
                break;

            case 32:   //  Microsoft.UI.Xaml.Controls.GridView
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 33:   //  Microsoft.UI.Xaml.Controls.ItemsControl
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 34:   //  System.Windows.Input.ICommand
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 35:   //  Microsoft.UI.Xaml.Controls.ItemsPanelTemplate
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  CommunityToolkit.WinUI.UI.Animations.Connected
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("ListItemElementName");
                userType.AddMemberName("ListItemKey");
                userType.AddMemberName("Key");
                userType.AddMemberName("AnchorElement");
                xamlType = userType;
                break;

            case 37:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 38:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 39:   //  AsistenciaApp.Views.ContentGridPage
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_ContentGridPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  AsistenciaApp.ViewModels.ContentGridViewModel
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  CommunityToolkit.WinUI.UI.Controls.DataGrid
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_41_DataGrid;
                userType.AddMemberName("AutoGenerateColumns");
                userType.AddMemberName("GridLinesVisibility");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("Columns");
                userType.AddMemberName("AlternatingRowBackground");
                userType.AddMemberName("AlternatingRowForeground");
                userType.AddMemberName("AreRowDetailsFrozen");
                userType.AddMemberName("AreRowGroupHeadersFrozen");
                userType.AddMemberName("CanUserReorderColumns");
                userType.AddMemberName("CanUserResizeColumns");
                userType.AddMemberName("CanUserSortColumns");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("ClipboardCopyMode");
                userType.AddMemberName("ColumnHeaderHeight");
                userType.AddMemberName("ColumnHeaderStyle");
                userType.AddMemberName("ColumnWidth");
                userType.AddMemberName("DataFetchSize");
                userType.AddMemberName("DragIndicatorStyle");
                userType.AddMemberName("DropLocationIndicatorStyle");
                userType.AddMemberName("FrozenColumnCount");
                userType.AddMemberName("HeadersVisibility");
                userType.AddMemberName("HorizontalGridLinesBrush");
                userType.AddMemberName("HorizontalScrollBarVisibility");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("IsValid");
                userType.AddMemberName("IncrementalLoadingThreshold");
                userType.AddMemberName("IncrementalLoadingTrigger");
                userType.AddMemberName("MaxColumnWidth");
                userType.AddMemberName("MinColumnWidth");
                userType.AddMemberName("RowBackground");
                userType.AddMemberName("RowDetailsTemplate");
                userType.AddMemberName("RowDetailsVisibilityMode");
                userType.AddMemberName("RowForeground");
                userType.AddMemberName("RowHeight");
                userType.AddMemberName("RowHeaderWidth");
                userType.AddMemberName("RowHeaderStyle");
                userType.AddMemberName("RowStyle");
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("VerticalGridLinesBrush");
                userType.AddMemberName("VerticalScrollBarVisibility");
                userType.AddMemberName("CurrentColumn");
                userType.AddMemberName("RowGroupHeaderPropertyNameAlternative");
                userType.AddMemberName("RowGroupHeaderStyles");
                userType.AddMemberName("SelectedItems");
                xamlType = userType;
                break;

            case 42:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 43:   //  CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.None);
                userType.AddEnumValue("Horizontal", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.Horizontal);
                userType.AddEnumValue("Vertical", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.Vertical);
                userType.AddEnumValue("All", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.All);
                xamlType = userType;
                break;

            case 44:   //  System.Collections.IEnumerable
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 45:   //  System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>"));
                userType.CollectionAdd = VectorAdd_45_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_46_Collection;
                userType.CollectionAdd = VectorAdd_46_Collection;
                xamlType = userType;
                break;

            case 47:   //  CommunityToolkit.WinUI.UI.Controls.DataGridColumn
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.AddMemberName("ActualWidth");
                userType.AddMemberName("CanUserReorder");
                userType.AddMemberName("CanUserResize");
                userType.AddMemberName("CanUserSort");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("ClipboardContentBinding");
                userType.AddMemberName("DisplayIndex");
                userType.AddMemberName("DragIndicatorStyle");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("Header");
                userType.AddMemberName("IsAutoGenerated");
                userType.AddMemberName("IsFrozen");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("MaxWidth");
                userType.AddMemberName("MinWidth");
                userType.AddMemberName("SortDirection");
                userType.AddMemberName("Tag");
                userType.AddMemberName("Visibility");
                userType.AddMemberName("Width");
                xamlType = userType;
                break;

            case 48:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 49:   //  Microsoft.UI.Xaml.Data.Binding
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 50:   //  Int32
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection"));
                userType.BoxInstance = userType.BoxType<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 52:   //  CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ascending", global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection.Ascending);
                userType.AddEnumValue("Descending", global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection.Descending);
                xamlType = userType;
                break;

            case 53:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 54:   //  CommunityToolkit.WinUI.UI.Controls.DataGridLength
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.CreateFromStringMethod = x => (global::System.Object)global::CommunityToolkit.WinUI.UI.Controls.DataGridLength.ConvertFromString(x);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 55:   //  Microsoft.UI.Xaml.Media.Brush
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 56:   //  CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.None);
                userType.AddEnumValue("ExcludeHeader", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.ExcludeHeader);
                userType.AddEnumValue("IncludeHeader", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.IncludeHeader);
                xamlType = userType;
                break;

            case 57:   //  CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.None);
                userType.AddEnumValue("Column", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.Column);
                userType.AddEnumValue("Row", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.Row);
                userType.AddEnumValue("All", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.All);
                xamlType = userType;
                break;

            case 58:   //  Microsoft.UI.Xaml.Controls.ScrollBarVisibility
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 59:   //  Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 60:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 61:   //  CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("VisibleWhenSelected", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected);
                userType.AddEnumValue("Visible", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.Visible);
                userType.AddEnumValue("Collapsed", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.Collapsed);
                xamlType = userType;
                break;

            case 62:   //  CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Extended", global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode.Extended);
                userType.AddEnumValue("Single", global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode.Single);
                xamlType = userType;
                break;

            case 63:   //  System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>"));
                userType.CollectionAdd = VectorAdd_63_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 64:   //  System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_64_Collection;
                userType.CollectionAdd = VectorAdd_64_Collection;
                xamlType = userType;
                break;

            case 65:   //  System.Collections.IList
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 66:   //  CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn"));
                userType.Activator = Activate_66_DataGridTextColumn;
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("Foreground");
                xamlType = userType;
                break;

            case 67:   //  CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn"));
                userType.AddMemberName("Binding");
                userType.AddMemberName("ClipboardContentBinding");
                userType.AddMemberName("EditingElementStyle");
                userType.AddMemberName("ElementStyle");
                xamlType = userType;
                break;

            case 68:   //  Microsoft.UI.Xaml.Media.FontFamily
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 69:   //  Windows.UI.Text.FontStyle
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 70:   //  Windows.UI.Text.FontWeight
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 71:   //  CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn"));
                userType.Activator = Activate_71_DataGridTemplateColumn;
                userType.AddMemberName("CellTemplate");
                userType.AddMemberName("CellEditingTemplate");
                xamlType = userType;
                break;

            case 72:   //  AsistenciaApp.Views.DataGridPage
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_72_DataGridPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 73:   //  AsistenciaApp.ViewModels.DataGridViewModel
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 74:   //  AsistenciaApp.Views.EstudiantesDataGrid
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_74_EstudiantesDataGrid;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 75:   //  AsistenciaApp.ViewModels.EstudiantesDataGridViewModel
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 76:   //  AsistenciaApp.Views.ListDetailsDetailControl
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_76_ListDetailsDetailControl;
                userType.AddMemberName("ListDetailsMenuItem");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 77:   //  AsistenciaApp.Core.Models.SampleOrder
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 78:   //  CommunityToolkit.WinUI.UI.Controls.ListDetailsView
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_78_ListDetailsView;
                userType.AddMemberName("BackButtonBehavior");
                userType.AddMemberName("DetailsTemplate");
                userType.AddMemberName("ListHeaderTemplate");
                userType.AddMemberName("NoSelectionContentTemplate");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("DetailsContentTemplateSelector");
                userType.AddMemberName("ListPaneItemTemplateSelector");
                userType.AddMemberName("DetailsPaneBackground");
                userType.AddMemberName("ListPaneBackground");
                userType.AddMemberName("ListHeader");
                userType.AddMemberName("ListPaneEmptyContent");
                userType.AddMemberName("ListPaneEmptyContentTemplate");
                userType.AddMemberName("DetailsHeader");
                userType.AddMemberName("DetailsHeaderTemplate");
                userType.AddMemberName("ListPaneWidth");
                userType.AddMemberName("NoSelectionContent");
                userType.AddMemberName("ViewState");
                userType.AddMemberName("ListCommandBar");
                userType.AddMemberName("DetailsCommandBar");
                userType.AddMemberName("CompactModeThresholdWidth");
                userType.AddMemberName("MapDetails");
                xamlType = userType;
                break;

            case 79:   //  CommunityToolkit.WinUI.UI.Controls.BackButtonBehavior
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Automatic", global::CommunityToolkit.WinUI.UI.Controls.BackButtonBehavior.Automatic);
                userType.AddEnumValue("Inline", global::CommunityToolkit.WinUI.UI.Controls.BackButtonBehavior.Inline);
                userType.AddEnumValue("System", global::CommunityToolkit.WinUI.UI.Controls.BackButtonBehavior.System);
                userType.AddEnumValue("Manual", global::CommunityToolkit.WinUI.UI.Controls.BackButtonBehavior.Manual);
                xamlType = userType;
                break;

            case 80:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 81:   //  CommunityToolkit.WinUI.UI.Controls.ListDetailsViewState
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("List", global::CommunityToolkit.WinUI.UI.Controls.ListDetailsViewState.List);
                userType.AddEnumValue("Details", global::CommunityToolkit.WinUI.UI.Controls.ListDetailsViewState.Details);
                userType.AddEnumValue("Both", global::CommunityToolkit.WinUI.UI.Controls.ListDetailsViewState.Both);
                xamlType = userType;
                break;

            case 82:   //  Microsoft.UI.Xaml.Controls.CommandBar
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 83:   //  System.Func`2<Object, Object>
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.MulticastDelegate"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 84:   //  System.MulticastDelegate
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Delegate"));
                xamlType = userType;
                break;

            case 85:   //  System.Delegate
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 86:   //  AsistenciaApp.Views.ListDetailsPage
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_86_ListDetailsPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 87:   //  AsistenciaApp.ViewModels.ListDetailsViewModel
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 88:   //  AsistenciaApp.Views.LoginPage
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_88_LoginPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 89:   //  AsistenciaApp.Views.MainPage
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_89_MainPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 90:   //  AsistenciaApp.ViewModels.MainViewModel
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 91:   //  AsistenciaApp.Views.RestorePasswordPage
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_91_RestorePasswordPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 92:   //  AsistenciaApp.Helpers.EnumToBooleanConverter
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_92_EnumToBooleanConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 93:   //  AsistenciaApp.Views.SettingsPage
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_93_SettingsPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 94:   //  AsistenciaApp.ViewModels.SettingsViewModel
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 95:   //  Microsoft.UI.Xaml.Controls.MenuBar
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_95_MenuBar;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.MenuBar.Items");
                userType.AddMemberName("Items");
                xamlType = userType;
                break;

            case 96:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuBarItem>
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_96_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 97:   //  Microsoft.UI.Xaml.Controls.MenuBarItem
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_97_MenuBarItem;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.MenuBarItem.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("Title");
                xamlType = userType;
                break;

            case 98:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase>
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_98_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 99:   //  Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 100:   //  Microsoft.UI.Xaml.Controls.AnimatedIcon
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.IconElement"));
                userType.Activator = Activate_100_AnimatedIcon;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.AnimatedIcon.Source");
                userType.AddMemberName("Source");
                userType.AddMemberName("FallbackIconSource");
                userType.AddMemberName("MirroredWhenRightToLeft");
                userType.AddMemberName("State");
                xamlType = userType;
                break;

            case 101:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 102:   //  Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 103:   //  Microsoft.UI.Xaml.Controls.IconSource
                xamlType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 104:   //  Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedSettingsVisualSource
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_104_AnimatedSettingsVisualSource;
                userType.AddMemberName("Markers");
                xamlType = userType;
                break;

            case 105:   //  System.Collections.Generic.IReadOnlyDictionary`2<String, Double>
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 106:   //  AsistenciaApp.Views.ShellPage
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_106_ShellPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 107:   //  AsistenciaApp.ViewModels.ShellViewModel
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 108:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_108_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 109:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_109_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Core_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_DataGrid_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Input_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Layout_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Markdown_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Media_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_WindowEx_WindowContent(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.WindowContent;
        }
        private void set_1_WindowEx_WindowContent(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.WindowContent = (global::System.Object)Value;
        }
        private object get_2_WindowEx_MinWidth(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MinWidth;
        }
        private void set_2_WindowEx_MinWidth(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MinWidth = (global::System.Double)Value;
        }
        private object get_3_WindowEx_MinHeight(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MinHeight;
        }
        private void set_3_WindowEx_MinHeight(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MinHeight = (global::System.Double)Value;
        }
        private object get_4_WindowEx_PersistenceId(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.PersistenceId;
        }
        private void set_4_WindowEx_PersistenceId(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.PersistenceId = (global::System.String)Value;
        }
        private object get_5_WindowEx_AppWindow(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.AppWindow;
        }
        private object get_6_WindowEx_TaskBarIcon(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.TaskBarIcon;
        }
        private void set_6_WindowEx_TaskBarIcon(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.TaskBarIcon = (global::WinUIEx.Icon)Value;
        }
        private object get_7_WindowEx_Title(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Title;
        }
        private void set_7_WindowEx_Title(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_8_WindowEx_IsTitleBarVisible(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsTitleBarVisible;
        }
        private void set_8_WindowEx_IsTitleBarVisible(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsTitleBarVisible = (global::System.Boolean)Value;
        }
        private object get_9_WindowEx_IsMinimizable(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsMinimizable;
        }
        private void set_9_WindowEx_IsMinimizable(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsMinimizable = (global::System.Boolean)Value;
        }
        private object get_10_WindowEx_IsMaximizable(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsMaximizable;
        }
        private void set_10_WindowEx_IsMaximizable(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsMaximizable = (global::System.Boolean)Value;
        }
        private object get_11_WindowEx_IsResizable(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsResizable;
        }
        private void set_11_WindowEx_IsResizable(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsResizable = (global::System.Boolean)Value;
        }
        private object get_12_WindowEx_WindowState(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.WindowState;
        }
        private void set_12_WindowEx_WindowState(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.WindowState = (global::WinUIEx.WindowState)Value;
        }
        private object get_13_WindowEx_IsShownInSwitchers(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsShownInSwitchers;
        }
        private void set_13_WindowEx_IsShownInSwitchers(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsShownInSwitchers = (global::System.Boolean)Value;
        }
        private object get_14_WindowEx_IsAlwaysOnTop(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsAlwaysOnTop;
        }
        private void set_14_WindowEx_IsAlwaysOnTop(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsAlwaysOnTop = (global::System.Boolean)Value;
        }
        private object get_15_WindowEx_Presenter(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Presenter;
        }
        private object get_16_WindowEx_PresenterKind(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.PresenterKind;
        }
        private void set_16_WindowEx_PresenterKind(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.PresenterKind = (global::Microsoft.UI.Windowing.AppWindowPresenterKind)Value;
        }
        private object get_17_WindowEx_Width(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Width;
        }
        private void set_17_WindowEx_Width(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_18_WindowEx_Height(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Height;
        }
        private void set_18_WindowEx_Height(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Height = (global::System.Double)Value;
        }
        private object get_19_WindowEx_MaxWidth(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MaxWidth;
        }
        private void set_19_WindowEx_MaxWidth(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MaxWidth = (global::System.Double)Value;
        }
        private object get_20_WindowEx_MaxHeight(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MaxHeight;
        }
        private void set_20_WindowEx_MaxHeight(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MaxHeight = (global::System.Double)Value;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_21_WindowEx_Backdrop(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Backdrop;
        }
        private void set_21_WindowEx_Backdrop(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Backdrop = (global::WinUIEx.SystemBackdrop)Value;
        }
#pragma warning restore 0618
        private object get_22_MicaBackdrop_Kind(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            return that.Kind;
        }
        private void set_22_MicaBackdrop_Kind(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            that.Kind = (global::Microsoft.UI.Composition.SystemBackdrops.MicaKind)Value;
        }
        private object get_23_Thickness_Left(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Left;
        }
        private void set_23_Thickness_Left(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Left = (global::System.Double)Value;
        }
        private object get_24_Thickness_Top(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Top;
        }
        private void set_24_Thickness_Top(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Top = (global::System.Double)Value;
        }
        private object get_25_Thickness_Right(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Right;
        }
        private void set_25_Thickness_Right(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Right = (global::System.Double)Value;
        }
        private object get_26_Thickness_Bottom(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Bottom;
        }
        private void set_26_Thickness_Bottom(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Bottom = (global::System.Double)Value;
        }
        private object get_27_CornerRadius_TopLeft(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.TopLeft;
        }
        private void set_27_CornerRadius_TopLeft(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.TopLeft = (global::System.Double)Value;
        }
        private object get_28_CornerRadius_TopRight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.TopRight;
        }
        private void set_28_CornerRadius_TopRight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.TopRight = (global::System.Double)Value;
        }
        private object get_29_CornerRadius_BottomRight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.BottomRight;
        }
        private void set_29_CornerRadius_BottomRight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.BottomRight = (global::System.Double)Value;
        }
        private object get_30_CornerRadius_BottomLeft(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.BottomLeft;
        }
        private void set_30_CornerRadius_BottomLeft(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.BottomLeft = (global::System.Double)Value;
        }
        private object get_31_AsistenciaPage_ViewModel(object instance)
        {
            var that = (global::AsistenciaApp.Views.AsistenciaPage)instance;
            return that.ViewModel;
        }
        private object get_32_ContentGridDetailPage_ViewModel(object instance)
        {
            var that = (global::AsistenciaApp.Views.ContentGridDetailPage)instance;
            return that.ViewModel;
        }
        private object get_33_AdaptiveGridView_DesiredWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView)instance;
            return that.DesiredWidth;
        }
        private void set_33_AdaptiveGridView_DesiredWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView)instance;
            that.DesiredWidth = (global::System.Double)Value;
        }
        private object get_34_AdaptiveGridView_ItemHeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView)instance;
            return that.ItemHeight;
        }
        private void set_34_AdaptiveGridView_ItemHeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView)instance;
            that.ItemHeight = (global::System.Double)Value;
        }
        private object get_35_AdaptiveGridView_ItemClickCommand(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView)instance;
            return that.ItemClickCommand;
        }
        private void set_35_AdaptiveGridView_ItemClickCommand(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView)instance;
            that.ItemClickCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_36_AdaptiveGridView_StretchContentForSingleRow(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView)instance;
            return that.StretchContentForSingleRow;
        }
        private void set_36_AdaptiveGridView_StretchContentForSingleRow(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView)instance;
            that.StretchContentForSingleRow = (global::System.Boolean)Value;
        }
        private object get_37_AdaptiveGridView_OneRowModeEnabled(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView)instance;
            return that.OneRowModeEnabled;
        }
        private void set_37_AdaptiveGridView_OneRowModeEnabled(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView)instance;
            that.OneRowModeEnabled = (global::System.Boolean)Value;
        }
        private object get_38_AdaptiveGridView_ItemsPanel(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView)instance;
            return that.ItemsPanel;
        }
        private object get_39_Connected_ListItemElementName(object instance)
        {
            return global::CommunityToolkit.WinUI.UI.Animations.Connected.GetListItemElementName((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_39_Connected_ListItemElementName(object instance, object Value)
        {
            global::CommunityToolkit.WinUI.UI.Animations.Connected.SetListItemElementName((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_40_Connected_ListItemKey(object instance)
        {
            return global::CommunityToolkit.WinUI.UI.Animations.Connected.GetListItemKey((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_40_Connected_ListItemKey(object instance, object Value)
        {
            global::CommunityToolkit.WinUI.UI.Animations.Connected.SetListItemKey((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_41_Connected_Key(object instance)
        {
            return global::CommunityToolkit.WinUI.UI.Animations.Connected.GetKey((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_41_Connected_Key(object instance, object Value)
        {
            global::CommunityToolkit.WinUI.UI.Animations.Connected.SetKey((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_42_Connected_AnchorElement(object instance)
        {
            return global::CommunityToolkit.WinUI.UI.Animations.Connected.GetAnchorElement((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_42_Connected_AnchorElement(object instance, object Value)
        {
            global::CommunityToolkit.WinUI.UI.Animations.Connected.SetAnchorElement((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::Microsoft.UI.Xaml.UIElement)Value);
        }
        private object get_43_ContentGridPage_ViewModel(object instance)
        {
            var that = (global::AsistenciaApp.Views.ContentGridPage)instance;
            return that.ViewModel;
        }
        private object get_44_DataGrid_AutoGenerateColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AutoGenerateColumns;
        }
        private void set_44_DataGrid_AutoGenerateColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AutoGenerateColumns = (global::System.Boolean)Value;
        }
        private object get_45_DataGrid_GridLinesVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.GridLinesVisibility;
        }
        private void set_45_DataGrid_GridLinesVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.GridLinesVisibility = (global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility)Value;
        }
        private object get_46_DataGrid_ItemsSource(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ItemsSource;
        }
        private void set_46_DataGrid_ItemsSource(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ItemsSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_47_DataGrid_Columns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.Columns;
        }
        private object get_48_DataGridColumn_ActualWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.ActualWidth;
        }
        private object get_49_DataGridColumn_CanUserReorder(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserReorder;
        }
        private void set_49_DataGridColumn_CanUserReorder(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserReorder = (global::System.Boolean)Value;
        }
        private object get_50_DataGridColumn_CanUserResize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserResize;
        }
        private void set_50_DataGridColumn_CanUserResize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserResize = (global::System.Boolean)Value;
        }
        private object get_51_DataGridColumn_CanUserSort(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserSort;
        }
        private void set_51_DataGridColumn_CanUserSort(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserSort = (global::System.Boolean)Value;
        }
        private object get_52_DataGridColumn_CellStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CellStyle;
        }
        private void set_52_DataGridColumn_CellStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_53_DataGridColumn_ClipboardContentBinding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.ClipboardContentBinding;
        }
        private void set_53_DataGridColumn_ClipboardContentBinding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.ClipboardContentBinding = (global::Microsoft.UI.Xaml.Data.Binding)Value;
        }
        private object get_54_DataGridColumn_DisplayIndex(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.DisplayIndex;
        }
        private void set_54_DataGridColumn_DisplayIndex(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.DisplayIndex = (global::System.Int32)Value;
        }
        private object get_55_DataGridColumn_DragIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.DragIndicatorStyle;
        }
        private void set_55_DataGridColumn_DragIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.DragIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_56_DataGridColumn_HeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.HeaderStyle;
        }
        private void set_56_DataGridColumn_HeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.HeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_57_DataGridColumn_Header(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Header;
        }
        private void set_57_DataGridColumn_Header(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_58_DataGridColumn_IsAutoGenerated(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsAutoGenerated;
        }
        private object get_59_DataGridColumn_IsFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsFrozen;
        }
        private object get_60_DataGridColumn_IsReadOnly(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsReadOnly;
        }
        private void set_60_DataGridColumn_IsReadOnly(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_61_DataGridColumn_MaxWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.MaxWidth;
        }
        private void set_61_DataGridColumn_MaxWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.MaxWidth = (global::System.Double)Value;
        }
        private object get_62_DataGridColumn_MinWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.MinWidth;
        }
        private void set_62_DataGridColumn_MinWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.MinWidth = (global::System.Double)Value;
        }
        private object get_63_DataGridColumn_SortDirection(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.SortDirection;
        }
        private void set_63_DataGridColumn_SortDirection(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.SortDirection = (global::System.Nullable<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>)Value;
        }
        private object get_64_DataGridColumn_Tag(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Tag;
        }
        private void set_64_DataGridColumn_Tag(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Tag = (global::System.Object)Value;
        }
        private object get_65_DataGridColumn_Visibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Visibility;
        }
        private void set_65_DataGridColumn_Visibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Visibility = (global::Microsoft.UI.Xaml.Visibility)Value;
        }
        private object get_66_DataGridColumn_Width(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Width;
        }
        private void set_66_DataGridColumn_Width(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Width = (global::CommunityToolkit.WinUI.UI.Controls.DataGridLength)Value;
        }
        private object get_67_DataGrid_AlternatingRowBackground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AlternatingRowBackground;
        }
        private void set_67_DataGrid_AlternatingRowBackground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AlternatingRowBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_68_DataGrid_AlternatingRowForeground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AlternatingRowForeground;
        }
        private void set_68_DataGrid_AlternatingRowForeground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AlternatingRowForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_69_DataGrid_AreRowDetailsFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AreRowDetailsFrozen;
        }
        private void set_69_DataGrid_AreRowDetailsFrozen(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AreRowDetailsFrozen = (global::System.Boolean)Value;
        }
        private object get_70_DataGrid_AreRowGroupHeadersFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AreRowGroupHeadersFrozen;
        }
        private void set_70_DataGrid_AreRowGroupHeadersFrozen(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AreRowGroupHeadersFrozen = (global::System.Boolean)Value;
        }
        private object get_71_DataGrid_CanUserReorderColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserReorderColumns;
        }
        private void set_71_DataGrid_CanUserReorderColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserReorderColumns = (global::System.Boolean)Value;
        }
        private object get_72_DataGrid_CanUserResizeColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserResizeColumns;
        }
        private void set_72_DataGrid_CanUserResizeColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserResizeColumns = (global::System.Boolean)Value;
        }
        private object get_73_DataGrid_CanUserSortColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserSortColumns;
        }
        private void set_73_DataGrid_CanUserSortColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserSortColumns = (global::System.Boolean)Value;
        }
        private object get_74_DataGrid_CellStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CellStyle;
        }
        private void set_74_DataGrid_CellStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_75_DataGrid_ClipboardCopyMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ClipboardCopyMode;
        }
        private void set_75_DataGrid_ClipboardCopyMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ClipboardCopyMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode)Value;
        }
        private object get_76_DataGrid_ColumnHeaderHeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnHeaderHeight;
        }
        private void set_76_DataGrid_ColumnHeaderHeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnHeaderHeight = (global::System.Double)Value;
        }
        private object get_77_DataGrid_ColumnHeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnHeaderStyle;
        }
        private void set_77_DataGrid_ColumnHeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnHeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_78_DataGrid_ColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnWidth;
        }
        private void set_78_DataGrid_ColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnWidth = (global::CommunityToolkit.WinUI.UI.Controls.DataGridLength)Value;
        }
        private object get_79_DataGrid_DataFetchSize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DataFetchSize;
        }
        private void set_79_DataGrid_DataFetchSize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DataFetchSize = (global::System.Double)Value;
        }
        private object get_80_DataGrid_DragIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DragIndicatorStyle;
        }
        private void set_80_DataGrid_DragIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DragIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_81_DataGrid_DropLocationIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DropLocationIndicatorStyle;
        }
        private void set_81_DataGrid_DropLocationIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DropLocationIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_82_DataGrid_FrozenColumnCount(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.FrozenColumnCount;
        }
        private void set_82_DataGrid_FrozenColumnCount(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.FrozenColumnCount = (global::System.Int32)Value;
        }
        private object get_83_DataGrid_HeadersVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HeadersVisibility;
        }
        private void set_83_DataGrid_HeadersVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HeadersVisibility = (global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility)Value;
        }
        private object get_84_DataGrid_HorizontalGridLinesBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HorizontalGridLinesBrush;
        }
        private void set_84_DataGrid_HorizontalGridLinesBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HorizontalGridLinesBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_85_DataGrid_HorizontalScrollBarVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HorizontalScrollBarVisibility;
        }
        private void set_85_DataGrid_HorizontalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HorizontalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility)Value;
        }
        private object get_86_DataGrid_IsReadOnly(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IsReadOnly;
        }
        private void set_86_DataGrid_IsReadOnly(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_87_DataGrid_IsValid(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IsValid;
        }
        private object get_88_DataGrid_IncrementalLoadingThreshold(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IncrementalLoadingThreshold;
        }
        private void set_88_DataGrid_IncrementalLoadingThreshold(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IncrementalLoadingThreshold = (global::System.Double)Value;
        }
        private object get_89_DataGrid_IncrementalLoadingTrigger(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IncrementalLoadingTrigger;
        }
        private void set_89_DataGrid_IncrementalLoadingTrigger(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IncrementalLoadingTrigger = (global::Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger)Value;
        }
        private object get_90_DataGrid_MaxColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.MaxColumnWidth;
        }
        private void set_90_DataGrid_MaxColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.MaxColumnWidth = (global::System.Double)Value;
        }
        private object get_91_DataGrid_MinColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.MinColumnWidth;
        }
        private void set_91_DataGrid_MinColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.MinColumnWidth = (global::System.Double)Value;
        }
        private object get_92_DataGrid_RowBackground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowBackground;
        }
        private void set_92_DataGrid_RowBackground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_93_DataGrid_RowDetailsTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowDetailsTemplate;
        }
        private void set_93_DataGrid_RowDetailsTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowDetailsTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_94_DataGrid_RowDetailsVisibilityMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowDetailsVisibilityMode;
        }
        private void set_94_DataGrid_RowDetailsVisibilityMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowDetailsVisibilityMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode)Value;
        }
        private object get_95_DataGrid_RowForeground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowForeground;
        }
        private void set_95_DataGrid_RowForeground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_96_DataGrid_RowHeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeight;
        }
        private void set_96_DataGrid_RowHeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeight = (global::System.Double)Value;
        }
        private object get_97_DataGrid_RowHeaderWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeaderWidth;
        }
        private void set_97_DataGrid_RowHeaderWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeaderWidth = (global::System.Double)Value;
        }
        private object get_98_DataGrid_RowHeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeaderStyle;
        }
        private void set_98_DataGrid_RowHeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_99_DataGrid_RowStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowStyle;
        }
        private void set_99_DataGrid_RowStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_100_DataGrid_SelectionMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectionMode;
        }
        private void set_100_DataGrid_SelectionMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectionMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode)Value;
        }
        private object get_101_DataGrid_SelectedIndex(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedIndex;
        }
        private void set_101_DataGrid_SelectedIndex(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_102_DataGrid_SelectedItem(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedItem;
        }
        private void set_102_DataGrid_SelectedItem(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_103_DataGrid_VerticalGridLinesBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.VerticalGridLinesBrush;
        }
        private void set_103_DataGrid_VerticalGridLinesBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.VerticalGridLinesBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_104_DataGrid_VerticalScrollBarVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.VerticalScrollBarVisibility;
        }
        private void set_104_DataGrid_VerticalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.VerticalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility)Value;
        }
        private object get_105_DataGrid_CurrentColumn(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CurrentColumn;
        }
        private void set_105_DataGrid_CurrentColumn(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CurrentColumn = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)Value;
        }
        private object get_106_DataGrid_RowGroupHeaderPropertyNameAlternative(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowGroupHeaderPropertyNameAlternative;
        }
        private void set_106_DataGrid_RowGroupHeaderPropertyNameAlternative(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowGroupHeaderPropertyNameAlternative = (global::System.String)Value;
        }
        private object get_107_DataGrid_RowGroupHeaderStyles(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowGroupHeaderStyles;
        }
        private object get_108_DataGrid_SelectedItems(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedItems;
        }
        private object get_109_DataGridBoundColumn_Binding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.Binding;
        }
        private void set_109_DataGridBoundColumn_Binding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.Binding = (global::Microsoft.UI.Xaml.Data.Binding)Value;
        }
        private object get_110_DataGridTextColumn_FontFamily(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontFamily;
        }
        private void set_110_DataGridTextColumn_FontFamily(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontFamily = (global::Microsoft.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_111_DataGridTextColumn_FontSize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontSize;
        }
        private void set_111_DataGridTextColumn_FontSize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_112_DataGridTextColumn_FontStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontStyle;
        }
        private void set_112_DataGridTextColumn_FontStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_113_DataGridTextColumn_FontWeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontWeight;
        }
        private void set_113_DataGridTextColumn_FontWeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_114_DataGridTextColumn_Foreground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.Foreground;
        }
        private void set_114_DataGridTextColumn_Foreground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.Foreground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_115_DataGridBoundColumn_ClipboardContentBinding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.ClipboardContentBinding;
        }
        private void set_115_DataGridBoundColumn_ClipboardContentBinding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.ClipboardContentBinding = (global::Microsoft.UI.Xaml.Data.Binding)Value;
        }
        private object get_116_DataGridBoundColumn_EditingElementStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.EditingElementStyle;
        }
        private void set_116_DataGridBoundColumn_EditingElementStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.EditingElementStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_117_DataGridBoundColumn_ElementStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.ElementStyle;
        }
        private void set_117_DataGridBoundColumn_ElementStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.ElementStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_118_DataGridTemplateColumn_CellTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn)instance;
            return that.CellTemplate;
        }
        private void set_118_DataGridTemplateColumn_CellTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn)instance;
            that.CellTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_119_DataGridTemplateColumn_CellEditingTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn)instance;
            return that.CellEditingTemplate;
        }
        private void set_119_DataGridTemplateColumn_CellEditingTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn)instance;
            that.CellEditingTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_120_DataGridPage_ViewModel(object instance)
        {
            var that = (global::AsistenciaApp.Views.DataGridPage)instance;
            return that.ViewModel;
        }
        private object get_121_EstudiantesDataGrid_ViewModel(object instance)
        {
            var that = (global::AsistenciaApp.Views.EstudiantesDataGrid)instance;
            return that.ViewModel;
        }
        private object get_122_ListDetailsDetailControl_ListDetailsMenuItem(object instance)
        {
            var that = (global::AsistenciaApp.Views.ListDetailsDetailControl)instance;
            return that.ListDetailsMenuItem;
        }
        private void set_122_ListDetailsDetailControl_ListDetailsMenuItem(object instance, object Value)
        {
            var that = (global::AsistenciaApp.Views.ListDetailsDetailControl)instance;
            that.ListDetailsMenuItem = (global::AsistenciaApp.Core.Models.SampleOrder)Value;
        }
        private object get_123_ListDetailsView_BackButtonBehavior(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.BackButtonBehavior;
        }
        private void set_123_ListDetailsView_BackButtonBehavior(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.BackButtonBehavior = (global::CommunityToolkit.WinUI.UI.Controls.BackButtonBehavior)Value;
        }
        private object get_124_ListDetailsView_DetailsTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.DetailsTemplate;
        }
        private void set_124_ListDetailsView_DetailsTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.DetailsTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_125_ListDetailsView_ListHeaderTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.ListHeaderTemplate;
        }
        private void set_125_ListDetailsView_ListHeaderTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.ListHeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_126_ListDetailsView_NoSelectionContentTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.NoSelectionContentTemplate;
        }
        private void set_126_ListDetailsView_NoSelectionContentTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.NoSelectionContentTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_127_ListDetailsView_SelectedItem(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.SelectedItem;
        }
        private void set_127_ListDetailsView_SelectedItem(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_128_ListDetailsView_SelectedIndex(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.SelectedIndex;
        }
        private void set_128_ListDetailsView_SelectedIndex(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_129_ListDetailsView_DetailsContentTemplateSelector(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.DetailsContentTemplateSelector;
        }
        private void set_129_ListDetailsView_DetailsContentTemplateSelector(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.DetailsContentTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_130_ListDetailsView_ListPaneItemTemplateSelector(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.ListPaneItemTemplateSelector;
        }
        private void set_130_ListDetailsView_ListPaneItemTemplateSelector(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.ListPaneItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_131_ListDetailsView_DetailsPaneBackground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.DetailsPaneBackground;
        }
        private void set_131_ListDetailsView_DetailsPaneBackground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.DetailsPaneBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_132_ListDetailsView_ListPaneBackground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.ListPaneBackground;
        }
        private void set_132_ListDetailsView_ListPaneBackground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.ListPaneBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_133_ListDetailsView_ListHeader(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.ListHeader;
        }
        private void set_133_ListDetailsView_ListHeader(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.ListHeader = (global::System.Object)Value;
        }
        private object get_134_ListDetailsView_ListPaneEmptyContent(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.ListPaneEmptyContent;
        }
        private void set_134_ListDetailsView_ListPaneEmptyContent(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.ListPaneEmptyContent = (global::System.Object)Value;
        }
        private object get_135_ListDetailsView_ListPaneEmptyContentTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.ListPaneEmptyContentTemplate;
        }
        private void set_135_ListDetailsView_ListPaneEmptyContentTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.ListPaneEmptyContentTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_136_ListDetailsView_DetailsHeader(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.DetailsHeader;
        }
        private void set_136_ListDetailsView_DetailsHeader(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.DetailsHeader = (global::System.Object)Value;
        }
        private object get_137_ListDetailsView_DetailsHeaderTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.DetailsHeaderTemplate;
        }
        private void set_137_ListDetailsView_DetailsHeaderTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.DetailsHeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_138_ListDetailsView_ListPaneWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.ListPaneWidth;
        }
        private void set_138_ListDetailsView_ListPaneWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.ListPaneWidth = (global::System.Double)Value;
        }
        private object get_139_ListDetailsView_NoSelectionContent(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.NoSelectionContent;
        }
        private void set_139_ListDetailsView_NoSelectionContent(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.NoSelectionContent = (global::System.Object)Value;
        }
        private object get_140_ListDetailsView_ViewState(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.ViewState;
        }
        private object get_141_ListDetailsView_ListCommandBar(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.ListCommandBar;
        }
        private void set_141_ListDetailsView_ListCommandBar(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.ListCommandBar = (global::Microsoft.UI.Xaml.Controls.CommandBar)Value;
        }
        private object get_142_ListDetailsView_DetailsCommandBar(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.DetailsCommandBar;
        }
        private void set_142_ListDetailsView_DetailsCommandBar(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.DetailsCommandBar = (global::Microsoft.UI.Xaml.Controls.CommandBar)Value;
        }
        private object get_143_ListDetailsView_CompactModeThresholdWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.CompactModeThresholdWidth;
        }
        private void set_143_ListDetailsView_CompactModeThresholdWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.CompactModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_144_ListDetailsView_MapDetails(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            return that.MapDetails;
        }
        private void set_144_ListDetailsView_MapDetails(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.ListDetailsView)instance;
            that.MapDetails = (global::System.Func<global::System.Object, global::System.Object>)Value;
        }
        private object get_145_ListDetailsPage_ViewModel(object instance)
        {
            var that = (global::AsistenciaApp.Views.ListDetailsPage)instance;
            return that.ViewModel;
        }
        private object get_146_MainPage_ViewModel(object instance)
        {
            var that = (global::AsistenciaApp.Views.MainPage)instance;
            return that.ViewModel;
        }
        private object get_147_SettingsPage_ViewModel(object instance)
        {
            var that = (global::AsistenciaApp.Views.SettingsPage)instance;
            return that.ViewModel;
        }
        private object get_148_MenuBar_Items(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.MenuBar)instance;
            return that.Items;
        }
        private object get_149_MenuBarItem_Items(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.MenuBarItem)instance;
            return that.Items;
        }
        private object get_150_MenuBarItem_Title(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.MenuBarItem)instance;
            return that.Title;
        }
        private void set_150_MenuBarItem_Title(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.MenuBarItem)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_151_AnimatedIcon_Source(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            return that.Source;
        }
        private void set_151_AnimatedIcon_Source(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            that.Source = (global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2)Value;
        }
        private object get_152_AnimatedIcon_FallbackIconSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            return that.FallbackIconSource;
        }
        private void set_152_AnimatedIcon_FallbackIconSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            that.FallbackIconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
        private object get_153_AnimatedIcon_MirroredWhenRightToLeft(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            return that.MirroredWhenRightToLeft;
        }
        private void set_153_AnimatedIcon_MirroredWhenRightToLeft(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            that.MirroredWhenRightToLeft = (global::System.Boolean)Value;
        }
        private object get_154_AnimatedIcon_State(object instance)
        {
            return global::Microsoft.UI.Xaml.Controls.AnimatedIcon.GetState((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_154_AnimatedIcon_State(object instance, object Value)
        {
            global::Microsoft.UI.Xaml.Controls.AnimatedIcon.SetState((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_155_AnimatedSettingsVisualSource_Markers(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedSettingsVisualSource)instance;
            return that.Markers;
        }
        private object get_156_ShellPage_ViewModel(object instance)
        {
            var that = (global::AsistenciaApp.Views.ShellPage)instance;
            return that.ViewModel;
        }
        private object get_157_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_158_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_158_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_159_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_160_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_161_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_161_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_162_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_162_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_163_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember xamlMember = null;
            global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "WinUIEx.WindowEx.WindowContent":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "WindowContent", "Object");
                xamlMember.Getter = get_1_WindowEx_WindowContent;
                xamlMember.Setter = set_1_WindowEx_WindowContent;
                break;
            case "WinUIEx.WindowEx.MinWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "MinWidth", "Double");
                xamlMember.Getter = get_2_WindowEx_MinWidth;
                xamlMember.Setter = set_2_WindowEx_MinWidth;
                break;
            case "WinUIEx.WindowEx.MinHeight":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "MinHeight", "Double");
                xamlMember.Getter = get_3_WindowEx_MinHeight;
                xamlMember.Setter = set_3_WindowEx_MinHeight;
                break;
            case "WinUIEx.WindowEx.PersistenceId":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "PersistenceId", "String");
                xamlMember.Getter = get_4_WindowEx_PersistenceId;
                xamlMember.Setter = set_4_WindowEx_PersistenceId;
                break;
            case "WinUIEx.WindowEx.AppWindow":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "AppWindow", "Microsoft.UI.Windowing.AppWindow");
                xamlMember.Getter = get_5_WindowEx_AppWindow;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUIEx.WindowEx.TaskBarIcon":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "TaskBarIcon", "WinUIEx.Icon");
                xamlMember.Getter = get_6_WindowEx_TaskBarIcon;
                xamlMember.Setter = set_6_WindowEx_TaskBarIcon;
                break;
            case "WinUIEx.WindowEx.Title":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_7_WindowEx_Title;
                xamlMember.Setter = set_7_WindowEx_Title;
                break;
            case "WinUIEx.WindowEx.IsTitleBarVisible":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsTitleBarVisible", "Boolean");
                xamlMember.Getter = get_8_WindowEx_IsTitleBarVisible;
                xamlMember.Setter = set_8_WindowEx_IsTitleBarVisible;
                break;
            case "WinUIEx.WindowEx.IsMinimizable":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsMinimizable", "Boolean");
                xamlMember.Getter = get_9_WindowEx_IsMinimizable;
                xamlMember.Setter = set_9_WindowEx_IsMinimizable;
                break;
            case "WinUIEx.WindowEx.IsMaximizable":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsMaximizable", "Boolean");
                xamlMember.Getter = get_10_WindowEx_IsMaximizable;
                xamlMember.Setter = set_10_WindowEx_IsMaximizable;
                break;
            case "WinUIEx.WindowEx.IsResizable":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsResizable", "Boolean");
                xamlMember.Getter = get_11_WindowEx_IsResizable;
                xamlMember.Setter = set_11_WindowEx_IsResizable;
                break;
            case "WinUIEx.WindowEx.WindowState":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "WindowState", "WinUIEx.WindowState");
                xamlMember.Getter = get_12_WindowEx_WindowState;
                xamlMember.Setter = set_12_WindowEx_WindowState;
                break;
            case "WinUIEx.WindowEx.IsShownInSwitchers":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsShownInSwitchers", "Boolean");
                xamlMember.Getter = get_13_WindowEx_IsShownInSwitchers;
                xamlMember.Setter = set_13_WindowEx_IsShownInSwitchers;
                break;
            case "WinUIEx.WindowEx.IsAlwaysOnTop":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsAlwaysOnTop", "Boolean");
                xamlMember.Getter = get_14_WindowEx_IsAlwaysOnTop;
                xamlMember.Setter = set_14_WindowEx_IsAlwaysOnTop;
                break;
            case "WinUIEx.WindowEx.Presenter":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Presenter", "Microsoft.UI.Windowing.AppWindowPresenter");
                xamlMember.Getter = get_15_WindowEx_Presenter;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUIEx.WindowEx.PresenterKind":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "PresenterKind", "Microsoft.UI.Windowing.AppWindowPresenterKind");
                xamlMember.Getter = get_16_WindowEx_PresenterKind;
                xamlMember.Setter = set_16_WindowEx_PresenterKind;
                break;
            case "WinUIEx.WindowEx.Width":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.Getter = get_17_WindowEx_Width;
                xamlMember.Setter = set_17_WindowEx_Width;
                break;
            case "WinUIEx.WindowEx.Height":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Height", "Double");
                xamlMember.Getter = get_18_WindowEx_Height;
                xamlMember.Setter = set_18_WindowEx_Height;
                break;
            case "WinUIEx.WindowEx.MaxWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "MaxWidth", "Double");
                xamlMember.Getter = get_19_WindowEx_MaxWidth;
                xamlMember.Setter = set_19_WindowEx_MaxWidth;
                break;
            case "WinUIEx.WindowEx.MaxHeight":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "MaxHeight", "Double");
                xamlMember.Getter = get_20_WindowEx_MaxHeight;
                xamlMember.Setter = set_20_WindowEx_MaxHeight;
                break;
            case "WinUIEx.WindowEx.Backdrop":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Backdrop", "WinUIEx.SystemBackdrop");
                xamlMember.Getter = get_21_WindowEx_Backdrop;
                xamlMember.Setter = set_21_WindowEx_Backdrop;
                break;
            case "Microsoft.UI.Xaml.Media.MicaBackdrop.Kind":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.MicaBackdrop");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Kind", "Microsoft.UI.Composition.SystemBackdrops.MicaKind");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_MicaBackdrop_Kind;
                xamlMember.Setter = set_22_MicaBackdrop_Kind;
                break;
            case "Microsoft.UI.Xaml.Thickness.Left":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Left", "Double");
                xamlMember.Getter = get_23_Thickness_Left;
                xamlMember.Setter = set_23_Thickness_Left;
                break;
            case "Microsoft.UI.Xaml.Thickness.Top":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Top", "Double");
                xamlMember.Getter = get_24_Thickness_Top;
                xamlMember.Setter = set_24_Thickness_Top;
                break;
            case "Microsoft.UI.Xaml.Thickness.Right":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Right", "Double");
                xamlMember.Getter = get_25_Thickness_Right;
                xamlMember.Setter = set_25_Thickness_Right;
                break;
            case "Microsoft.UI.Xaml.Thickness.Bottom":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Bottom", "Double");
                xamlMember.Getter = get_26_Thickness_Bottom;
                xamlMember.Setter = set_26_Thickness_Bottom;
                break;
            case "Microsoft.UI.Xaml.CornerRadius.TopLeft":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "TopLeft", "Double");
                xamlMember.Getter = get_27_CornerRadius_TopLeft;
                xamlMember.Setter = set_27_CornerRadius_TopLeft;
                break;
            case "Microsoft.UI.Xaml.CornerRadius.TopRight":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "TopRight", "Double");
                xamlMember.Getter = get_28_CornerRadius_TopRight;
                xamlMember.Setter = set_28_CornerRadius_TopRight;
                break;
            case "Microsoft.UI.Xaml.CornerRadius.BottomRight":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "BottomRight", "Double");
                xamlMember.Getter = get_29_CornerRadius_BottomRight;
                xamlMember.Setter = set_29_CornerRadius_BottomRight;
                break;
            case "Microsoft.UI.Xaml.CornerRadius.BottomLeft":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "BottomLeft", "Double");
                xamlMember.Getter = get_30_CornerRadius_BottomLeft;
                xamlMember.Setter = set_30_CornerRadius_BottomLeft;
                break;
            case "AsistenciaApp.Views.AsistenciaPage.ViewModel":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AsistenciaApp.Views.AsistenciaPage");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ViewModel", "AsistenciaApp.ViewModels.AsistenciaViewModel");
                xamlMember.Getter = get_31_AsistenciaPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AsistenciaApp.Views.ContentGridDetailPage.ViewModel":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AsistenciaApp.Views.ContentGridDetailPage");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ViewModel", "AsistenciaApp.ViewModels.ContentGridDetailViewModel");
                xamlMember.Getter = get_32_ContentGridDetailPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView.DesiredWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DesiredWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_AdaptiveGridView_DesiredWidth;
                xamlMember.Setter = set_33_AdaptiveGridView_DesiredWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView.ItemHeight":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ItemHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_AdaptiveGridView_ItemHeight;
                xamlMember.Setter = set_34_AdaptiveGridView_ItemHeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView.ItemClickCommand":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ItemClickCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_AdaptiveGridView_ItemClickCommand;
                xamlMember.Setter = set_35_AdaptiveGridView_ItemClickCommand;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView.StretchContentForSingleRow":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "StretchContentForSingleRow", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_AdaptiveGridView_StretchContentForSingleRow;
                xamlMember.Setter = set_36_AdaptiveGridView_StretchContentForSingleRow;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView.OneRowModeEnabled":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "OneRowModeEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_AdaptiveGridView_OneRowModeEnabled;
                xamlMember.Setter = set_37_AdaptiveGridView_OneRowModeEnabled;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView.ItemsPanel":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.AdaptiveGridView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ItemsPanel", "Microsoft.UI.Xaml.Controls.ItemsPanelTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_AdaptiveGridView_ItemsPanel;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Animations.Connected.ListItemElementName":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Animations.Connected");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ListItemElementName", "String");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_39_Connected_ListItemElementName;
                xamlMember.Setter = set_39_Connected_ListItemElementName;
                break;
            case "CommunityToolkit.WinUI.UI.Animations.Connected.ListItemKey":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Animations.Connected");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ListItemKey", "String");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_40_Connected_ListItemKey;
                xamlMember.Setter = set_40_Connected_ListItemKey;
                break;
            case "CommunityToolkit.WinUI.UI.Animations.Connected.Key":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Animations.Connected");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Key", "String");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_41_Connected_Key;
                xamlMember.Setter = set_41_Connected_Key;
                break;
            case "CommunityToolkit.WinUI.UI.Animations.Connected.AnchorElement":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Animations.Connected");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "AnchorElement", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_42_Connected_AnchorElement;
                xamlMember.Setter = set_42_Connected_AnchorElement;
                break;
            case "AsistenciaApp.Views.ContentGridPage.ViewModel":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AsistenciaApp.Views.ContentGridPage");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ViewModel", "AsistenciaApp.ViewModels.ContentGridViewModel");
                xamlMember.Getter = get_43_ContentGridPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AutoGenerateColumns":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "AutoGenerateColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_DataGrid_AutoGenerateColumns;
                xamlMember.Setter = set_44_DataGrid_AutoGenerateColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.GridLinesVisibility":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "GridLinesVisibility", "CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_DataGrid_GridLinesVisibility;
                xamlMember.Setter = set_45_DataGrid_GridLinesVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ItemsSource":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_DataGrid_ItemsSource;
                xamlMember.Setter = set_46_DataGrid_ItemsSource;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.Columns":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Columns", "System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>");
                xamlMember.Getter = get_47_DataGrid_Columns;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.ActualWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ActualWidth", "Double");
                xamlMember.Getter = get_48_DataGridColumn_ActualWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserReorder":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CanUserReorder", "Boolean");
                xamlMember.Getter = get_49_DataGridColumn_CanUserReorder;
                xamlMember.Setter = set_49_DataGridColumn_CanUserReorder;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserResize":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CanUserResize", "Boolean");
                xamlMember.Getter = get_50_DataGridColumn_CanUserResize;
                xamlMember.Setter = set_50_DataGridColumn_CanUserResize;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserSort":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CanUserSort", "Boolean");
                xamlMember.Getter = get_51_DataGridColumn_CanUserSort;
                xamlMember.Setter = set_51_DataGridColumn_CanUserSort;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CellStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_52_DataGridColumn_CellStyle;
                xamlMember.Setter = set_52_DataGridColumn_CellStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.ClipboardContentBinding":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ClipboardContentBinding", "Microsoft.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_53_DataGridColumn_ClipboardContentBinding;
                xamlMember.Setter = set_53_DataGridColumn_ClipboardContentBinding;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.DisplayIndex":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DisplayIndex", "Int32");
                xamlMember.Getter = get_54_DataGridColumn_DisplayIndex;
                xamlMember.Setter = set_54_DataGridColumn_DisplayIndex;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.DragIndicatorStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DragIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_55_DataGridColumn_DragIndicatorStyle;
                xamlMember.Setter = set_55_DataGridColumn_DragIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.HeaderStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_56_DataGridColumn_HeaderStyle;
                xamlMember.Setter = set_56_DataGridColumn_HeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Header":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.Getter = get_57_DataGridColumn_Header;
                xamlMember.Setter = set_57_DataGridColumn_Header;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsAutoGenerated":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsAutoGenerated", "Boolean");
                xamlMember.Getter = get_58_DataGridColumn_IsAutoGenerated;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsFrozen":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsFrozen", "Boolean");
                xamlMember.Getter = get_59_DataGridColumn_IsFrozen;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsReadOnly":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.Getter = get_60_DataGridColumn_IsReadOnly;
                xamlMember.Setter = set_60_DataGridColumn_IsReadOnly;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.MaxWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "MaxWidth", "Double");
                xamlMember.Getter = get_61_DataGridColumn_MaxWidth;
                xamlMember.Setter = set_61_DataGridColumn_MaxWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.MinWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "MinWidth", "Double");
                xamlMember.Getter = get_62_DataGridColumn_MinWidth;
                xamlMember.Setter = set_62_DataGridColumn_MinWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.SortDirection":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "SortDirection", "System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>");
                xamlMember.Getter = get_63_DataGridColumn_SortDirection;
                xamlMember.Setter = set_63_DataGridColumn_SortDirection;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Tag":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Tag", "Object");
                xamlMember.Getter = get_64_DataGridColumn_Tag;
                xamlMember.Setter = set_64_DataGridColumn_Tag;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Visibility":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Visibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.Getter = get_65_DataGridColumn_Visibility;
                xamlMember.Setter = set_65_DataGridColumn_Visibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Width":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Width", "CommunityToolkit.WinUI.UI.Controls.DataGridLength");
                xamlMember.Getter = get_66_DataGridColumn_Width;
                xamlMember.Setter = set_66_DataGridColumn_Width;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AlternatingRowBackground":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "AlternatingRowBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_DataGrid_AlternatingRowBackground;
                xamlMember.Setter = set_67_DataGrid_AlternatingRowBackground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AlternatingRowForeground":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "AlternatingRowForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_DataGrid_AlternatingRowForeground;
                xamlMember.Setter = set_68_DataGrid_AlternatingRowForeground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AreRowDetailsFrozen":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "AreRowDetailsFrozen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_DataGrid_AreRowDetailsFrozen;
                xamlMember.Setter = set_69_DataGrid_AreRowDetailsFrozen;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AreRowGroupHeadersFrozen":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "AreRowGroupHeadersFrozen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_DataGrid_AreRowGroupHeadersFrozen;
                xamlMember.Setter = set_70_DataGrid_AreRowGroupHeadersFrozen;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserReorderColumns":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CanUserReorderColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_DataGrid_CanUserReorderColumns;
                xamlMember.Setter = set_71_DataGrid_CanUserReorderColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserResizeColumns":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CanUserResizeColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_DataGrid_CanUserResizeColumns;
                xamlMember.Setter = set_72_DataGrid_CanUserResizeColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserSortColumns":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CanUserSortColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_DataGrid_CanUserSortColumns;
                xamlMember.Setter = set_73_DataGrid_CanUserSortColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CellStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_DataGrid_CellStyle;
                xamlMember.Setter = set_74_DataGrid_CellStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ClipboardCopyMode":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ClipboardCopyMode", "CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_DataGrid_ClipboardCopyMode;
                xamlMember.Setter = set_75_DataGrid_ClipboardCopyMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnHeaderHeight":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ColumnHeaderHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_DataGrid_ColumnHeaderHeight;
                xamlMember.Setter = set_76_DataGrid_ColumnHeaderHeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnHeaderStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ColumnHeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_DataGrid_ColumnHeaderStyle;
                xamlMember.Setter = set_77_DataGrid_ColumnHeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ColumnWidth", "CommunityToolkit.WinUI.UI.Controls.DataGridLength");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_DataGrid_ColumnWidth;
                xamlMember.Setter = set_78_DataGrid_ColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DataFetchSize":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DataFetchSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_DataGrid_DataFetchSize;
                xamlMember.Setter = set_79_DataGrid_DataFetchSize;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DragIndicatorStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DragIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_DataGrid_DragIndicatorStyle;
                xamlMember.Setter = set_80_DataGrid_DragIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DropLocationIndicatorStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DropLocationIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_DataGrid_DropLocationIndicatorStyle;
                xamlMember.Setter = set_81_DataGrid_DropLocationIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.FrozenColumnCount":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "FrozenColumnCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_DataGrid_FrozenColumnCount;
                xamlMember.Setter = set_82_DataGrid_FrozenColumnCount;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HeadersVisibility":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "HeadersVisibility", "CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_DataGrid_HeadersVisibility;
                xamlMember.Setter = set_83_DataGrid_HeadersVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HorizontalGridLinesBrush":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "HorizontalGridLinesBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_DataGrid_HorizontalGridLinesBrush;
                xamlMember.Setter = set_84_DataGrid_HorizontalGridLinesBrush;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HorizontalScrollBarVisibility":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "HorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_DataGrid_HorizontalScrollBarVisibility;
                xamlMember.Setter = set_85_DataGrid_HorizontalScrollBarVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IsReadOnly":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_DataGrid_IsReadOnly;
                xamlMember.Setter = set_86_DataGrid_IsReadOnly;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IsValid":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsValid", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_DataGrid_IsValid;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IncrementalLoadingThreshold":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IncrementalLoadingThreshold", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_DataGrid_IncrementalLoadingThreshold;
                xamlMember.Setter = set_88_DataGrid_IncrementalLoadingThreshold;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IncrementalLoadingTrigger":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IncrementalLoadingTrigger", "Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_DataGrid_IncrementalLoadingTrigger;
                xamlMember.Setter = set_89_DataGrid_IncrementalLoadingTrigger;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.MaxColumnWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "MaxColumnWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_DataGrid_MaxColumnWidth;
                xamlMember.Setter = set_90_DataGrid_MaxColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.MinColumnWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "MinColumnWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_DataGrid_MinColumnWidth;
                xamlMember.Setter = set_91_DataGrid_MinColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowBackground":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "RowBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_DataGrid_RowBackground;
                xamlMember.Setter = set_92_DataGrid_RowBackground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowDetailsTemplate":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "RowDetailsTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_DataGrid_RowDetailsTemplate;
                xamlMember.Setter = set_93_DataGrid_RowDetailsTemplate;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowDetailsVisibilityMode":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "RowDetailsVisibilityMode", "CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_DataGrid_RowDetailsVisibilityMode;
                xamlMember.Setter = set_94_DataGrid_RowDetailsVisibilityMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowForeground":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "RowForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_DataGrid_RowForeground;
                xamlMember.Setter = set_95_DataGrid_RowForeground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeight":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "RowHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_DataGrid_RowHeight;
                xamlMember.Setter = set_96_DataGrid_RowHeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeaderWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "RowHeaderWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_DataGrid_RowHeaderWidth;
                xamlMember.Setter = set_97_DataGrid_RowHeaderWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeaderStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "RowHeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_DataGrid_RowHeaderStyle;
                xamlMember.Setter = set_98_DataGrid_RowHeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "RowStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_DataGrid_RowStyle;
                xamlMember.Setter = set_99_DataGrid_RowStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectionMode":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "SelectionMode", "CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_DataGrid_SelectionMode;
                xamlMember.Setter = set_100_DataGrid_SelectionMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedIndex":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_DataGrid_SelectedIndex;
                xamlMember.Setter = set_101_DataGrid_SelectedIndex;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedItem":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_DataGrid_SelectedItem;
                xamlMember.Setter = set_102_DataGrid_SelectedItem;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.VerticalGridLinesBrush":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "VerticalGridLinesBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_DataGrid_VerticalGridLinesBrush;
                xamlMember.Setter = set_103_DataGrid_VerticalGridLinesBrush;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.VerticalScrollBarVisibility":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "VerticalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_DataGrid_VerticalScrollBarVisibility;
                xamlMember.Setter = set_104_DataGrid_VerticalScrollBarVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CurrentColumn":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CurrentColumn", "CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember.Getter = get_105_DataGrid_CurrentColumn;
                xamlMember.Setter = set_105_DataGrid_CurrentColumn;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowGroupHeaderPropertyNameAlternative":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "RowGroupHeaderPropertyNameAlternative", "String");
                xamlMember.Getter = get_106_DataGrid_RowGroupHeaderPropertyNameAlternative;
                xamlMember.Setter = set_106_DataGrid_RowGroupHeaderPropertyNameAlternative;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowGroupHeaderStyles":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "RowGroupHeaderStyles", "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>");
                xamlMember.Getter = get_107_DataGrid_RowGroupHeaderStyles;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedItems":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "SelectedItems", "System.Collections.IList");
                xamlMember.Getter = get_108_DataGrid_SelectedItems;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.Binding":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Binding", "Microsoft.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_109_DataGridBoundColumn_Binding;
                xamlMember.Setter = set_109_DataGridBoundColumn_Binding;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontFamily":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "FontFamily", "Microsoft.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_DataGridTextColumn_FontFamily;
                xamlMember.Setter = set_110_DataGridTextColumn_FontFamily;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontSize":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.Getter = get_111_DataGridTextColumn_FontSize;
                xamlMember.Setter = set_111_DataGridTextColumn_FontSize;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.Getter = get_112_DataGridTextColumn_FontStyle;
                xamlMember.Setter = set_112_DataGridTextColumn_FontStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontWeight":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.Getter = get_113_DataGridTextColumn_FontWeight;
                xamlMember.Setter = set_113_DataGridTextColumn_FontWeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.Foreground":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Foreground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.Getter = get_114_DataGridTextColumn_Foreground;
                xamlMember.Setter = set_114_DataGridTextColumn_Foreground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.ClipboardContentBinding":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ClipboardContentBinding", "Microsoft.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_115_DataGridBoundColumn_ClipboardContentBinding;
                xamlMember.Setter = set_115_DataGridBoundColumn_ClipboardContentBinding;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.EditingElementStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "EditingElementStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_116_DataGridBoundColumn_EditingElementStyle;
                xamlMember.Setter = set_116_DataGridBoundColumn_EditingElementStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.ElementStyle":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ElementStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_117_DataGridBoundColumn_ElementStyle;
                xamlMember.Setter = set_117_DataGridBoundColumn_ElementStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn.CellTemplate":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CellTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_118_DataGridTemplateColumn_CellTemplate;
                xamlMember.Setter = set_118_DataGridTemplateColumn_CellTemplate;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn.CellEditingTemplate":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CellEditingTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_119_DataGridTemplateColumn_CellEditingTemplate;
                xamlMember.Setter = set_119_DataGridTemplateColumn_CellEditingTemplate;
                break;
            case "AsistenciaApp.Views.DataGridPage.ViewModel":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AsistenciaApp.Views.DataGridPage");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ViewModel", "AsistenciaApp.ViewModels.DataGridViewModel");
                xamlMember.Getter = get_120_DataGridPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AsistenciaApp.Views.EstudiantesDataGrid.ViewModel":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AsistenciaApp.Views.EstudiantesDataGrid");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ViewModel", "AsistenciaApp.ViewModels.EstudiantesDataGridViewModel");
                xamlMember.Getter = get_121_EstudiantesDataGrid_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AsistenciaApp.Views.ListDetailsDetailControl.ListDetailsMenuItem":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AsistenciaApp.Views.ListDetailsDetailControl");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ListDetailsMenuItem", "AsistenciaApp.Core.Models.SampleOrder");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_ListDetailsDetailControl_ListDetailsMenuItem;
                xamlMember.Setter = set_122_ListDetailsDetailControl_ListDetailsMenuItem;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.BackButtonBehavior":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "BackButtonBehavior", "CommunityToolkit.WinUI.UI.Controls.BackButtonBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_ListDetailsView_BackButtonBehavior;
                xamlMember.Setter = set_123_ListDetailsView_BackButtonBehavior;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.DetailsTemplate":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DetailsTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_ListDetailsView_DetailsTemplate;
                xamlMember.Setter = set_124_ListDetailsView_DetailsTemplate;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.ListHeaderTemplate":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ListHeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_ListDetailsView_ListHeaderTemplate;
                xamlMember.Setter = set_125_ListDetailsView_ListHeaderTemplate;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.NoSelectionContentTemplate":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "NoSelectionContentTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_ListDetailsView_NoSelectionContentTemplate;
                xamlMember.Setter = set_126_ListDetailsView_NoSelectionContentTemplate;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.SelectedItem":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_ListDetailsView_SelectedItem;
                xamlMember.Setter = set_127_ListDetailsView_SelectedItem;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.SelectedIndex":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_ListDetailsView_SelectedIndex;
                xamlMember.Setter = set_128_ListDetailsView_SelectedIndex;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.DetailsContentTemplateSelector":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DetailsContentTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_ListDetailsView_DetailsContentTemplateSelector;
                xamlMember.Setter = set_129_ListDetailsView_DetailsContentTemplateSelector;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.ListPaneItemTemplateSelector":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ListPaneItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_ListDetailsView_ListPaneItemTemplateSelector;
                xamlMember.Setter = set_130_ListDetailsView_ListPaneItemTemplateSelector;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.DetailsPaneBackground":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DetailsPaneBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_ListDetailsView_DetailsPaneBackground;
                xamlMember.Setter = set_131_ListDetailsView_DetailsPaneBackground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.ListPaneBackground":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ListPaneBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_ListDetailsView_ListPaneBackground;
                xamlMember.Setter = set_132_ListDetailsView_ListPaneBackground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.ListHeader":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ListHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_ListDetailsView_ListHeader;
                xamlMember.Setter = set_133_ListDetailsView_ListHeader;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.ListPaneEmptyContent":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ListPaneEmptyContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_ListDetailsView_ListPaneEmptyContent;
                xamlMember.Setter = set_134_ListDetailsView_ListPaneEmptyContent;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.ListPaneEmptyContentTemplate":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ListPaneEmptyContentTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_ListDetailsView_ListPaneEmptyContentTemplate;
                xamlMember.Setter = set_135_ListDetailsView_ListPaneEmptyContentTemplate;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.DetailsHeader":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DetailsHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_ListDetailsView_DetailsHeader;
                xamlMember.Setter = set_136_ListDetailsView_DetailsHeader;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.DetailsHeaderTemplate":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DetailsHeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_ListDetailsView_DetailsHeaderTemplate;
                xamlMember.Setter = set_137_ListDetailsView_DetailsHeaderTemplate;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.ListPaneWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ListPaneWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_ListDetailsView_ListPaneWidth;
                xamlMember.Setter = set_138_ListDetailsView_ListPaneWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.NoSelectionContent":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "NoSelectionContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_ListDetailsView_NoSelectionContent;
                xamlMember.Setter = set_139_ListDetailsView_NoSelectionContent;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.ViewState":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ViewState", "CommunityToolkit.WinUI.UI.Controls.ListDetailsViewState");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_ListDetailsView_ViewState;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.ListCommandBar":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ListCommandBar", "Microsoft.UI.Xaml.Controls.CommandBar");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_ListDetailsView_ListCommandBar;
                xamlMember.Setter = set_141_ListDetailsView_ListCommandBar;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.DetailsCommandBar":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "DetailsCommandBar", "Microsoft.UI.Xaml.Controls.CommandBar");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_ListDetailsView_DetailsCommandBar;
                xamlMember.Setter = set_142_ListDetailsView_DetailsCommandBar;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.CompactModeThresholdWidth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "CompactModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_ListDetailsView_CompactModeThresholdWidth;
                xamlMember.Setter = set_143_ListDetailsView_CompactModeThresholdWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.ListDetailsView.MapDetails":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.ListDetailsView");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "MapDetails", "System.Func`2<Object, Object>");
                xamlMember.Getter = get_144_ListDetailsView_MapDetails;
                xamlMember.Setter = set_144_ListDetailsView_MapDetails;
                break;
            case "AsistenciaApp.Views.ListDetailsPage.ViewModel":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AsistenciaApp.Views.ListDetailsPage");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ViewModel", "AsistenciaApp.ViewModels.ListDetailsViewModel");
                xamlMember.Getter = get_145_ListDetailsPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AsistenciaApp.Views.MainPage.ViewModel":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AsistenciaApp.Views.MainPage");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ViewModel", "AsistenciaApp.ViewModels.MainViewModel");
                xamlMember.Getter = get_146_MainPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AsistenciaApp.Views.SettingsPage.ViewModel":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AsistenciaApp.Views.SettingsPage");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ViewModel", "AsistenciaApp.ViewModels.SettingsViewModel");
                xamlMember.Getter = get_147_SettingsPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.MenuBar.Items":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.MenuBar");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuBarItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_MenuBar_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.MenuBarItem.Items":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.MenuBarItem");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_MenuBarItem_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.MenuBarItem.Title":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.MenuBarItem");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_150_MenuBarItem_Title;
                xamlMember.Setter = set_150_MenuBarItem_Title;
                break;
            case "Microsoft.UI.Xaml.Controls.AnimatedIcon.Source":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.AnimatedIcon");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Source", "Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_AnimatedIcon_Source;
                xamlMember.Setter = set_151_AnimatedIcon_Source;
                break;
            case "Microsoft.UI.Xaml.Controls.AnimatedIcon.FallbackIconSource":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.AnimatedIcon");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "FallbackIconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_AnimatedIcon_FallbackIconSource;
                xamlMember.Setter = set_152_AnimatedIcon_FallbackIconSource;
                break;
            case "Microsoft.UI.Xaml.Controls.AnimatedIcon.MirroredWhenRightToLeft":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.AnimatedIcon");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "MirroredWhenRightToLeft", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_AnimatedIcon_MirroredWhenRightToLeft;
                xamlMember.Setter = set_153_AnimatedIcon_MirroredWhenRightToLeft;
                break;
            case "Microsoft.UI.Xaml.Controls.AnimatedIcon.State":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.AnimatedIcon");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "State", "String");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_154_AnimatedIcon_State;
                xamlMember.Setter = set_154_AnimatedIcon_State;
                break;
            case "Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedSettingsVisualSource.Markers":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedSettingsVisualSource");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Markers", "System.Collections.Generic.IReadOnlyDictionary`2<String, Double>");
                xamlMember.Getter = get_155_AnimatedSettingsVisualSource_Markers;
                xamlMember.SetIsReadOnly();
                break;
            case "AsistenciaApp.Views.ShellPage.ViewModel":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AsistenciaApp.Views.ShellPage");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "ViewModel", "AsistenciaApp.ViewModels.ShellViewModel");
                xamlMember.Getter = get_156_ShellPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_157_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_TreeViewNode_Content;
                xamlMember.Setter = set_158_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_161_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_161_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_162_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_162_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_163_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::AsistenciaApp.AsistenciaApp_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

